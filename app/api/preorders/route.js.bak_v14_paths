import { dbConnect } from "../../../../lib/db";
import Order from "../../../../models/Order";

export async function POST(req){
  const { NextResponse } = await import("next/server");
  try{
    await dbConnect();

    const body = await req.json().catch(() => ({}));
    const {
      items = [],
      customer = {},
      advanceDue = 0,
      isPreorder,
      isPreOrder,
      metadata = {},
      payment = {}
    } = body;

    // Normalize required fields
    const name = customer?.name ?? body?.name ?? null;
    const phone = customer?.phone ?? body?.phone ?? null;
    const email = customer?.email ?? body?.email ?? null;
    const address = customer?.address ?? body?.address ?? null;
    const city = customer?.city ?? body?.city ?? null;

    const isPreOrderFlag = (isPreOrder ?? isPreorder ?? true) ? true : false;

    if (!phone) {
      return NextResponse.json({ ok: false, error: "Phone is required" }, { status: 400 });
    }

    const orderDoc = {
      items,
      name, phone, email,
      address, city,
      isPreOrder: isPreOrderFlag,
      preOrderAdvanceAmount: Number(advanceDue || 0),
      // optional pass-throughs, if present
      subtotal: body?.subtotal ?? undefined,
      deliveryFee: body?.deliveryFee ?? undefined,
      total: body?.total ?? undefined,
      paymentProvider: payment?.provider ?? body?.paymentProvider ?? undefined,
      paymentMethod: payment?.method ?? body?.paymentMethod ?? undefined,
      transactionId: payment?.transaction_id ?? body?.transactionId ?? undefined,
      metadata
    };

    const order = await Order.create(orderDoc);
    return NextResponse.json({ ok: true, orderId: String(order._id) });
  }catch(err){
    console.error("POST /api/preorders error", err);
    return NextResponse.json({ ok:false, error: String(err?.message || err) }, { status: 500 });
  }
}
