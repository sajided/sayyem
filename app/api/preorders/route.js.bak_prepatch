import { sendAdminWebhooks } from '../../../lib/webhooks';
import { dispatchWebhook } from "../../../lib/webhooks";
import { getSiteSettings } from "../../../lib/settings";

import { NextResponse } from 'next/server'
import { dbConnect } from '@/lib/db'
import Product from '@/models/Product'
import Order from '@/models/Order'

export async function POST(req){
  try{
    await dbConnect()
    const body = await req.json()
    const { slug, qty=1, name, phone, email, address, city, delivery='inside', subtotal, deliveryFee, total,
            preOrderAdvancePercent=50, advanceAmount=0, dueOnDelivery=0 } = body || {}
    if(!slug) return NextResponse.json({ error: 'Missing product slug' }, { status: 400 })
    const product = await Product.findOne({ slug }).lean()
    if(!product) return NextResponse.json({ error: 'Product not found' }, { status: 404 })

    const order = await Order.create({ status: 'approved',  email, email, email, items: [{
        productId: product._id,
        name: product.name,
        slug: product.slug,
        qty: Number(qty)||1,
        price: Number(product.salePrice||product.price||product.regularPrice||0),
        images: product.images || []
      }],
      name, phone, address, city,
      deliveryArea: delivery,
      subtotal: Number(subtotal)||0,
      deliveryFee: Number(deliveryFee)||0,
      total: Number(total)||0,
      payment: 'bkash',
      isPreOrder: true,
      preOrderAdvancePercent: Number(preOrderAdvancePercent)||50,
      advanceAmount: Number(advanceAmount)||0,
      dueOnDelivery: Number(dueOnDelivery)||0,
      preOrderNote: product.preOrderLeadTimeText || '',
      currentStatus: 'Placed'
    })

    return NextResponse.json({ ok: true, id: order._id })
  }catch(e){
    return NextResponse.json({ error: e.message || 'Failed to create preâ€‘order' }, { status: 500 })
  }
}
