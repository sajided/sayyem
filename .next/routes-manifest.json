{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/admin/categories/[id]",
      "regex": "^/api/admin/categories/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/admin/categories/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/admin/coupons/[id]",
      "regex": "^/api/admin/coupons/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/admin/coupons/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/admin/orders/[id]",
      "regex": "^/api/admin/orders/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/admin/orders/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/admin/orders/[id]/status",
      "regex": "^/api/admin/orders/([^/]+?)/status(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/admin/orders/(?<nxtPid>[^/]+?)/status(?:/)?$"
    },
    {
      "page": "/api/admin/preorder/orders/[id]",
      "regex": "^/api/admin/preorder/orders/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/admin/preorder/orders/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/admin/preorder/products/[id]",
      "regex": "^/api/admin/preorder/products/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/admin/preorder/products/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/admin/products/by-slug/[slug]",
      "regex": "^/api/admin/products/by\\-slug/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/api/admin/products/by\\-slug/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/admin/products/[id]",
      "regex": "^/api/admin/products/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/admin/products/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/admin/seo-meta/[id]",
      "regex": "^/api/admin/seo\\-meta/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/admin/seo\\-meta/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/orders/[id]",
      "regex": "^/api/orders/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/orders/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/products/by-id/[id]",
      "regex": "^/api/products/by\\-id/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/products/by\\-id/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/products/[slug]",
      "regex": "^/api/products/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/api/products/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/preorder-checkout/[slug]",
      "regex": "^/preorder\\-checkout/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/preorder\\-checkout/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/product/[slug]",
      "regex": "^/product/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/product/(?<nxtPslug>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin/login",
      "regex": "^/admin/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/login(?:/)?$"
    },
    {
      "page": "/admin/preorder",
      "regex": "^/admin/preorder(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/preorder(?:/)?$"
    },
    {
      "page": "/apple-icon.png",
      "regex": "^/apple\\-icon\\.png(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/apple\\-icon\\.png(?:/)?$"
    },
    {
      "page": "/categories",
      "regex": "^/categories(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/categories(?:/)?$"
    },
    {
      "page": "/checkout",
      "regex": "^/checkout(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/checkout(?:/)?$"
    },
    {
      "page": "/icon.png",
      "regex": "^/icon\\.png(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/icon\\.png(?:/)?$"
    },
    {
      "page": "/manifest.webmanifest",
      "regex": "^/manifest\\.webmanifest(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/manifest\\.webmanifest(?:/)?$"
    },
    {
      "page": "/policies/privacy",
      "regex": "^/policies/privacy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/policies/privacy(?:/)?$"
    },
    {
      "page": "/policies/shipping-returns",
      "regex": "^/policies/shipping\\-returns(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/policies/shipping\\-returns(?:/)?$"
    },
    {
      "page": "/policies/terms",
      "regex": "^/policies/terms(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/policies/terms(?:/)?$"
    },
    {
      "page": "/preorder",
      "regex": "^/preorder(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/preorder(?:/)?$"
    },
    {
      "page": "/preorder-cancel",
      "regex": "^/preorder\\-cancel(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/preorder\\-cancel(?:/)?$"
    },
    {
      "page": "/preorder-success",
      "regex": "^/preorder\\-success(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/preorder\\-success(?:/)?$"
    },
    {
      "page": "/robots.txt",
      "regex": "^/robots\\.txt(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/robots\\.txt(?:/)?$"
    },
    {
      "page": "/shop",
      "regex": "^/shop(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/shop(?:/)?$"
    },
    {
      "page": "/sitemap.xml",
      "regex": "^/sitemap\\.xml(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sitemap\\.xml(?:/)?$"
    },
    {
      "page": "/track",
      "regex": "^/track(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/track(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}